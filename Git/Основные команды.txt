git checkout
	Выполняет работу над локальными файлами. Служит для просмотра истории и переходов
	между коммитами.
	git checkout ветка - выполняет смену ветки на другую.
	git checkout имя коммита - выполняет переход на данный коммит.
	git checkout - покажет измененные отслеживаемые файлы.
	git checkout -b ветка - создаст новую ветку и перейдет на нее.
git fetch
	Получает удаленную версию репозитория, но не обновляет локальную версию.
	git pull является более опасным вариантом объединения удаленной и локальной версий
	Так как поссле скачивания удаленной версии сразу же выполняет git merge для
	создания коммита слиния нового удаленного контента.
	git fetch репо - Получить все ветки из репозитория. Так же получает неообходимые
	файлы и коммиты из репозитория.
	git fetch репо ветка - получить указанную ветку удаленного репозитория.
	git fetch --all - получает все ветки и коммиты из удаленного репозитория
git pull
	Является комбинацией команд fit fetch (Скачивание) и git merge (Слияние) Будет
	создан новый коммит и на него передвинут курсор HEAD.
	Git pull объеденит удаленные изменения в один коммит, если не указан флаг --rebase,
	в ионом случае на локальном репозитории на ветке будут хранится все удаленные
	удаленные коммиты.
	Аналог этой команды:
		git fetch
		git merge / git rebase

	git pull --rebase - выполнит перебазирование удаленный веток поверх локальных.
git branch
	Служит для создания, обновления, перечисления и перименовывания веток. Но не для
	перехода между ними.
	git branch - git branch --list
	git branch новая_ветка - создает новую ветку. Если такая ветка существует, то ошибка.
	git branch -d ветка - удалить ветку безопасно. Тае как git проверит,
	есть ли в ветке неслитые изменения.
	git branch -D ветка - удалить ветку принудительно не смотря на содержимое ветки.
	git branch -m ветка - переименуйте текущую ветку / git branch -m ветка1 ветка2 -
	переименовать ветка1 в ветка2.
	git branch -a список всех веток, даже не локальных
	git push origin --delete ветка / git push origin :ветка - удалит ветку на сервере
git add
	Показывает git у, какие файлы надо включить в коммит. Git начинает эти файлы
	отслеживать. При этом, если отслеживаемый файл модифицировать, он перестанит
	отслеживаться.
 	git add файл/дирректория - добваляет файл или дирректорию в промежуточную область.
	git add -p - начинает сеанс выбора того, что добавлять в промежуточную область.
	Для каждого файла отображает изменения.
		Используйте:
		y для подготовки фрагмента,
		n для игнорирования фрагмента,
		s для разделения его на более мелкие фрагменты,
		e для редактирования фрагмента вручную и
		q для выхода.

	Разница между -A . и -u
			     new
	git add -A/. Да
	git add -u	Нет

	git rm --cacehd файл - удалить файл из отслеживания

git commit
	Фиксирует изменения файлов, которые были добавленны в промежуточную область.
	Фиксация происходит в локальной версии репозитория. Git записывает все содержимое
	каждого отслеживаемого файла при каждом коммите.
	git commit - Сделать фиксацию изменений. Будект запущен текстовый редактор для
	указания сообщения.
	git commit -a сделать фиксацию изменений среди тех файлов, которые когда то были
	отслежанны с помощью git add. После откроется редактор для ввода сообщения.
	git commit -m "сообщение" - сделать фиксацию и указать сообщение в кавычках.
	git commit -am "сообщение" - сделать фиксацию срежди изменений тех файлов,
	которые когда либо отслеживалсиь и указать сообщения к коммиту.
	git commit --amend - Добавить изменения в предыдущий коммит и изменить его сообщение.
git push
	Синхронизирует локальную версию репозитория с удаленной отправляя локальные изменения
	на сервер.
	git push сервер ветка - синхронизирует ветку с веткой на сервере. Синхронизация не
	произойдет, ваши наработки были сделанны относительно некого файла, который был изменен
	другим пользователем. В этом случае можно использовать флаг --force или скачать данные
	с сервера.
	git push сервер --force - синнхронизирует ветку с веткой на сервере не смотря ни на что.
	git push сервер --all - отправить свои локальные ветки на удаленный сервер. Так же
	отправляет все теги на сервер
	git push сервер --tags - отправляет теги на сервер.
	git push origin локальная_ветка:серверная ветка - синхронизация ветки в другую ветку на сервере
	Чтобы изменить коммиты на сервере:
		git rebase --interactive ветка - изменить коммиты в вашей ветке и перенести их в ветку
		git push - отправить коммиты на сервер
		Сделать общий комментарий, гре прописать хеш измененный коммитов и что было изменено
git rebase
	Позволяет перенести все комиты из одной ветки на другую
	git rebase ветка - переносит текущую ветку на указанную ветку.
	git rebase --interactive ветка - перенесет коммиты на ветку с использованием интерфейса,
	где можно внести исправления по поводу каждого коммита. Вы также можете изменить порядок
	списка коммитов. После того, как вы указали команды
	для каждого коммита в rebase, Git начнет воспроизводить коммиты на указанной ветке.
	Варианты:
		r - мереименовать
		e - изменить
		s - склеить
		d - удалить

	TODO skip continue abort